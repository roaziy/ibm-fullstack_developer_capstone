name: "Lint Code"

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

jobs:
  lint_python:
    name: Lint Python Files
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Print working directory
        run: pwd

      - name: Create flake8 configuration
        run: |
          echo "[flake8]
          max-line-length = 120
          exclude = .git,__pycache__,*/migrations/*,*/djangoapp/migrations/*
          ignore = E501,F401,E231,E302,W291,W293,E128,E117,E275,E225,E722,E251,F811,F841,E203,E712,F541,E131" > .flake8

      - name: Run Linter
        run: |
          pwd
          # This command finds all Python files recursively and runs flake8 on them
          find . -name "*.py" -exec flake8 {} +
          echo "Linted all the python files successfully"

  lint_js:
    name: Lint JavaScript Files
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "14"

      - name: Install JSHint
        run: npm install jshint --global

      - name: Create JSHint configuration
        run: |
          echo '{
            "esversion": 8,
            "asi": true,
            "node": true,
            "sub": true,
            "laxcomma": true,
            "laxbreak": true,
            "globals": {
              "console": true
            }
          }' > .jshintrc

      - name: Run Linter
        run: |
          # This command finds all JavaScript files recursively and runs JSHint on them
          find ./server/database -name "*.js" -exec jshint {} +
          echo "Linted all the js files successfully"
